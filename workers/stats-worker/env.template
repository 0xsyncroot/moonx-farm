# ================================
# Stats Worker Service Environment Configuration
# Copy this file to .env and update values as needed
# ================================

# ================================
# SERVICE CONFIGURATION
# ================================

# Node.js Environment (development, staging, production)
NODE_ENV=development

# Service Identity
SERVICE_NAME=stats-worker
SERVICE_VERSION=1.0.0

# ================================
# CLUSTER CONFIGURATION
# ================================

# Enable cluster mode (recommended for production)
CLUSTER_MODE=false

# Number of worker processes (0 = auto-detect CPU cores, max 4 for stats-worker)
CLUSTER_WORKERS=0

# ================================
# DATABASE CONFIGURATION
# ================================

# MongoDB Connection
MONGODB_URI=mongodb://localhost:27017/moonx-farm
MONGODB_DATABASE=moonx-farm

# MongoDB Connection Pool Settings
MONGODB_MAX_POOL_SIZE=10
MONGODB_MIN_POOL_SIZE=1

# MongoDB Features
MONGODB_ENABLE_METRICS=true

# ================================
# MESSAGE QUEUE CONFIGURATION
# ================================

# Kafka Configuration
KAFKA_BROKERS=localhost:9092
KAFKA_CLIENT_ID=stats-worker
KAFKA_GROUP_ID=stats-worker-group

# Kafka Topics
KAFKA_TOPIC_EVENTS=moonx.ws.events

# ================================
# BLOCKCHAIN CONFIGURATION
# ================================

# Alchemy API Key (REQUIRED for all chains)
ALCHEMY_API_KEY=your_alchemy_api_key_here

# Chain RPC URLs (replace YOUR_API_KEY with actual Alchemy API key)
BASE_RPC_URL=https://base-mainnet.g.alchemy.com/v2/YOUR_API_KEY
BSC_RPC_URL=https://bnb-mainnet.g.alchemy.com/v2/YOUR_API_KEY
ETHEREUM_RPC_URL=https://eth-mainnet.g.alchemy.com/v2/YOUR_API_KEY
POLYGON_RPC_URL=https://polygon-mainnet.g.alchemy.com/v2/YOUR_API_KEY
ARBITRUM_RPC_URL=https://arb-mainnet.g.alchemy.com/v2/YOUR_API_KEY
OPTIMISM_RPC_URL=https://opt-mainnet.g.alchemy.com/v2/YOUR_API_KEY

# Chain Configuration
ENABLED_CHAINS=base,bsc,ethereum

# Chain Logo URLs (Optional - defaults to CDN if not provided)
# BASE_LOGO_URL=https://custom-logo-url.com/base.png
# BSC_LOGO_URL=https://custom-logo-url.com/bsc.png  
# ETHEREUM_LOGO_URL=https://custom-logo-url.com/eth.png
# POLYGON_LOGO_URL=https://custom-logo-url.com/matic.png
# ARBITRUM_LOGO_URL=https://custom-logo-url.com/arbitrum.png
# OPTIMISM_LOGO_URL=https://custom-logo-url.com/optimism.png
# AVALANCHE_LOGO_URL=https://custom-logo-url.com/avax.png
# FANTOM_LOGO_URL=https://custom-logo-url.com/fantom.png

# ================================
# EXTERNAL API CONFIGURATION
# ================================

# DeFi Data APIs
DEFILLAMA_API_URL=https://api.llama.fi

# Bridge/Aggregator APIs
LIFI_API_URL=https://li.quest/v1
LIFI_API_KEY=your_lifi_api_key_here
RELAY_API_URL=https://api.relay.link

# ================================
# JOB SCHEDULING CONFIGURATION
# ================================

# Cron Schedules (cron format: second minute hour day month year)
# Production recommended intervals:
STATS_COLLECTION_INTERVAL=0 */5 * * * *     # Every 5 minutes at second 0
CHAIN_PERFORMANCE_INTERVAL=0 */1 * * * *    # Every 1 minute at second 0  
BRIDGE_LATENCY_INTERVAL=0 */2 * * * *       # Every 2 minutes at second 0

# Development intervals (more frequent for testing):
# STATS_COLLECTION_INTERVAL=*/30 * * * * *   # Every 30 seconds
# CHAIN_PERFORMANCE_INTERVAL=*/15 * * * * *  # Every 15 seconds
# BRIDGE_LATENCY_INTERVAL=*/20 * * * * *     # Every 20 seconds

# Job Timeouts (milliseconds)
STATS_COLLECTION_TIMEOUT=120000             # 2 minutes
CHAIN_PERFORMANCE_TIMEOUT=60000             # 1 minute
BRIDGE_LATENCY_TIMEOUT=90000                # 1.5 minutes

# ================================
# LOGGING CONFIGURATION
# ================================

# Log Level (error, warn, info, debug, trace)
LOG_LEVEL=info

# Log Format (json, text, pretty)
LOG_FORMAT=json

# ================================
# NOTES
# ================================

# 1. Copy this file to .env in the same directory
# 2. Update ALCHEMY_API_KEY with your actual API key
# 3. Update LIFI_API_KEY with your actual LI.FI API key (optional, helps avoid rate limits)
# 4. Configure MongoDB and Kafka connection strings for your environment
# 5. Adjust intervals and thresholds based on your requirements
# 6. Enable cluster mode for production deployments

# For production deployment:
# - Set NODE_ENV=production
# - Enable cluster mode (CLUSTER_MODE=true)
# - Use appropriate database connection strings
# - Configure proper logging levels 