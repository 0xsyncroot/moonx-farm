# ============================================
# Sync Worker Service - Kubernetes Deployment
# ============================================
# 
# Kubernetes manifests for production deployment:
# - Deployment with resource limits
# - Service for load balancing
# - ConfigMap for configuration
# - Secret for sensitive data
# - HorizontalPodAutoscaler for scaling
# - ServiceMonitor for Prometheus
# ============================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sync-worker
  namespace: moonx-farm
  labels:
    app: sync-worker
    component: worker
    version: v1.0.0
  annotations:
    description: "Sync Worker Service for Portfolio Synchronization"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: sync-worker
  template:
    metadata:
      labels:
        app: sync-worker
        component: worker
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault

      # Service Account
      serviceAccountName: sync-worker

      # Pod Anti-Affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sync-worker
              topologyKey: kubernetes.io/hostname

      # Containers
      containers:
      - name: sync-worker
        image: moonx-farm/sync-worker:latest
        imagePullPolicy: Always
        
        # Ports
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP

        # Environment Variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: log-level
        
        # Cluster configuration
        - name: CLUSTER_MODE
          value: "manual"
        - name: CLUSTER_WORKERS
          value: "2"
        
        # Worker configuration
        - name: WORKER_CONCURRENCY
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: worker-concurrency
        - name: WORKER_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: worker-timeout
        - name: WORKER_RETRIES
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: worker-retries
        
        # Database configuration
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: db-host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: db-port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: db-password
        
        # Redis configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: redis-password
        
        # API Keys
        - name: ALCHEMY_API_KEY
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: alchemy-api-key
        - name: BINANCE_API_KEY
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: binance-api-key
              optional: true
        - name: BINANCE_API_SECRET
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: binance-api-secret
              optional: true
        - name: COINGECKO_API_KEY
          valueFrom:
            secretKeyRef:
              name: sync-worker-secret
              key: coingecko-api-key
              optional: true
        
        # Monitoring configuration
        - name: MONITORING_ENABLE_HEALTH_CHECKS
          value: "true"
        - name: MONITORING_ENABLE_PROMETHEUS
          value: "true"
        - name: MONITORING_PROMETHEUS_PORT
          value: "9090"

        # Resource Limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        # Health Checks
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3

        # Startup Probe
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12

        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

        # Volume Mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache

      # Init Containers
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for database..."
          until nc -z ${DB_HOST} ${DB_PORT}; do
            echo "Database not ready, waiting..."
            sleep 2
          done
          echo "Database is ready!"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: db-host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: db-port

      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for Redis..."
          until nc -z ${REDIS_HOST} ${REDIS_PORT}; do
            echo "Redis not ready, waiting..."
            sleep 2
          done
          echo "Redis is ready!"
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: sync-worker-config
              key: redis-port

      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: cache
        emptyDir: {}

      # DNS Policy
      dnsPolicy: ClusterFirst
      
      # Restart Policy
      restartPolicy: Always
      
      # Termination Grace Period
      terminationGracePeriodSeconds: 30

      # Node Selector (optional)
      nodeSelector:
        kubernetes.io/os: linux
        node-type: worker

      # Tolerations (optional)
      tolerations:
      - key: "sync-worker"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sync-worker
  namespace: moonx-farm
  labels:
    app: sync-worker
automountServiceAccountToken: false 