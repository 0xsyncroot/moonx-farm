version: '3.8'

services:
  # ==============================================
  # Phase 1: Single Service Architecture
  # ==============================================
  notify-service:
    build: .
    container_name: moonx-notify-service
    ports:
      - "3006:3006"  # HTTP API
      - "3007:3007"  # Socket.IO WebSocket
    environment:
      - NODE_ENV=development
      - PORT=3006
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=notify-service
      - KAFKA_GROUP_ID=notify-service-group
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=moonx_notifications
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your-jwt-secret-for-development
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
      - LOG_LEVEL=debug
    depends_on:
      - redis
      - kafka
      - postgres
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - moonx-notify

  # ==============================================
  # Infrastructure Services
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: moonx-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - moonx-notify

  postgres:
    image: postgres:15-alpine
    container_name: moonx-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=moonx_notifications
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - moonx-notify

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: moonx-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    restart: unless-stopped
    networks:
      - moonx-notify

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: moonx-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - moonx-notify

  # ==============================================
  # Monitoring Services
  # ==============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: moonx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - moonx-notify

  grafana:
    image: grafana/grafana:latest
    container_name: moonx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - moonx-notify

  # ==============================================
  # Development Tools
  # ==============================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: moonx-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - moonx-notify

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: moonx-kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - moonx-notify

# ==============================================
# Named Volumes
# ==============================================
volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# ==============================================
# Networks
# ==============================================
networks:
  moonx-notify:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 