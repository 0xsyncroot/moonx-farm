# =============================================================================
# MoonXFarm Core Service - Production Docker Compose
# =============================================================================
# Complete production setup với PostgreSQL, Redis, và Core Service
# Usage: docker-compose up -d
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # PostgreSQL Database
  # =============================================================================
  postgres:
    image: postgres:16-alpine
    container_name: moonx-core-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: moonx_farm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - moonx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d moonx_farm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # =============================================================================
  # Redis Cache
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: moonx-core-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - moonx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # =============================================================================
  # Core Service
  # =============================================================================
  core-service:
    image: moonx/core-service:latest
    container_name: moonx-core-service
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: services/core-service/Dockerfile
    environment:
      # Service configuration
      NODE_ENV: production
      CORE_SERVICE_HOST: 0.0.0.0
      CORE_SERVICE_PORT: 3007
      
      # Database configuration
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: moonx_farm
      DATABASE_USER: postgres
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-postgres123}
      DATABASE_SSL: false
      DATABASE_MAX_CONNECTIONS: 20
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DB: 0
      REDIS_KEY_PREFIX: "moonx:"
      
      # Authentication
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      JWT_ISSUER: moonx-farm
      JWT_AUDIENCE: moonx-farm-users
      
      # External APIs
      ALCHEMY_API_KEY: ${ALCHEMY_API_KEY}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: json
      LOG_ENABLE_CONSOLE: true
      LOG_ENABLE_FILE: false
      
      # CORS
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      
    ports:
      - "3007:3007"
    networks:
      - moonx-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3007/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# =============================================================================
# Networks
# =============================================================================
networks:
  moonx-network:
    driver: bridge
    name: moonx-core-network

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data:
    driver: local
    name: moonx-core-postgres-data
  redis_data:
    driver: local
    name: moonx-core-redis-data

# =============================================================================
# Production Usage:
# =============================================================================
# 1. Create .env file với required variables:
#    DATABASE_PASSWORD=your-secure-password
#    JWT_SECRET=your-32-char-minimum-secret
#    ALCHEMY_API_KEY=your-alchemy-key
#
# 2. Build và start:
#    docker-compose up -d
#
# 3. Check health:
#    curl http://localhost:3007/health
#
# 4. View logs:
#    docker-compose logs -f core-service
#
# 5. Stop:
#    docker-compose down
# ============================================================================= 