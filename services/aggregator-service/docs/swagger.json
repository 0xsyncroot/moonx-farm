{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Aggregator service for MoonXFarm DEX - Aggregates prices and routes from multiple DEX sources",
        "title": "MoonXFarm Aggregator Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "MoonXFarm Team",
            "email": "support@moonxfarm.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3003",
    "basePath": "/api/v1",
    "paths": {
        "/health": {
            "get": {
                "description": "Check if the service is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/quote": {
            "get": {
                "description": "Get the best quote from all available sources, supports same-chain and cross-chain swaps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "quotes"
                ],
                "summary": "Get best quote",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source chain ID",
                        "name": "fromChainId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Destination chain ID",
                        "name": "toChainId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source token address",
                        "name": "fromToken",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination token address",
                        "name": "toToken",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount to swap (in token decimals)",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User wallet address",
                        "name": "userAddress",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Slippage tolerance (default: 0.5)",
                        "name": "slippage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Quote"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Check if the service is ready to handle requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/tokens/popular": {
            "get": {
                "description": "Get popular tokens for cross-chain swap with real-time prices from Binance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get popular tokens",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chain ID to filter tokens (0 for all active chains)",
                        "name": "chainId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get testnet tokens only (default: false for mainnet)",
                        "name": "testnet",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/search": {
            "get": {
                "description": "Search tokens by name/symbol (CoinGecko) or address (onchain + DexScreener)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Search tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (name/symbol or 0x address)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Preferred chain ID for address searches",
                        "name": "chainId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum results (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter for testnet chains only (default: false for mainnet)",
                        "name": "testnet",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.GasEstimate": {
            "type": "object",
            "properties": {
                "gasFee": {
                    "type": "number"
                },
                "gasFeeUSD": {
                    "type": "number"
                },
                "gasLimit": {
                    "type": "integer"
                },
                "gasPrice": {
                    "type": "number"
                }
            }
        },
        "models.HealthResponse": {
            "type": "object",
            "properties": {
                "checks": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "description": "Duration as string for swagger compatibility",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.Quote": {
            "type": "object",
            "properties": {
                "callData": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "fromAmount": {
                    "type": "number"
                },
                "fromToken": {
                    "$ref": "#/definitions/models.Token"
                },
                "gasEstimate": {
                    "$ref": "#/definitions/models.GasEstimate"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "price": {
                    "type": "number"
                },
                "priceImpact": {
                    "type": "number"
                },
                "provider": {
                    "type": "string"
                },
                "route": {
                    "$ref": "#/definitions/models.Route"
                },
                "slippageTolerance": {
                    "type": "number"
                },
                "to": {
                    "type": "string"
                },
                "toAmount": {
                    "type": "number"
                },
                "toAmountMin": {
                    "type": "number"
                },
                "toToken": {
                    "$ref": "#/definitions/models.Token"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Route": {
            "type": "object",
            "properties": {
                "gasEstimate": {
                    "$ref": "#/definitions/models.GasEstimate"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RouteStep"
                    }
                },
                "totalFee": {
                    "type": "number"
                }
            }
        },
        "models.RouteStep": {
            "type": "object",
            "properties": {
                "fee": {
                    "type": "number"
                },
                "fromAmount": {
                    "type": "number"
                },
                "fromToken": {
                    "$ref": "#/definitions/models.Token"
                },
                "gasEstimate": {
                    "$ref": "#/definitions/models.GasEstimate"
                },
                "poolAddress": {
                    "type": "string"
                },
                "priceImpact": {
                    "type": "number"
                },
                "protocol": {
                    "type": "string"
                },
                "toAmount": {
                    "type": "number"
                },
                "toToken": {
                    "$ref": "#/definitions/models.Token"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Token": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "chainId": {
                    "type": "integer"
                },
                "change24h": {
                    "type": "number"
                },
                "decimals": {
                    "type": "integer"
                },
                "isNative": {
                    "type": "boolean"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "logoURI": {
                    "type": "string"
                },
                "marketCap": {
                    "type": "number"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "popular": {
                    "description": "Whether token is in popular list",
                    "type": "boolean"
                },
                "priceUSD": {
                    "type": "number"
                },
                "source": {
                    "description": "Additional fields for external API integration",
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "verified": {
                    "description": "Whether token is verified",
                    "type": "boolean"
                },
                "volume24h": {
                    "type": "number"
                }
            }
        },
        "models.TokenListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "page": {
                    "type": "integer"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Token"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}