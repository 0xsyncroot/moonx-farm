input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => json
  }
  file {
    path => "/var/log/aggregator-service/app.log"
    type => "aggregator-service-logs"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json
  }
}

filter {
  # Handle aggregator service logs from file
  if [type] == "aggregator-service-logs" {
    mutate {
      add_field => { "service" => "aggregator-service" }
      add_field => { "source" => "file" }
    }
    
    # Parse timestamp
    date {
      match => [ "@timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    # Add log level
    if [level] {
      mutate {
        add_field => { "log_level" => "%{[level]}" }
      }
    }
    
    # Add request info if available
    if [http_request] {
      mutate {
        add_field => { "http_method" => "%{[http_request][method]}" }
        add_field => { "http_path" => "%{[http_request][path]}" }
        add_field => { "http_status" => "%{[http_request][status]}" }
        add_field => { "response_time" => "%{[http_request][duration]}" }
      }
    }
  }
  
  # Handle Docker container logs
  if [container][labels][com_docker_compose_service] == "aggregator-service" {
    mutate {
      add_field => { "service" => "aggregator-service" }
      add_field => { "source" => "docker" }
    }
    
    if [log][format] == "json" {
      json {
        source => "[log][message]"
      }
    }
    
    # Parse timestamp
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    # Add log level
    if [level] {
      mutate {
        add_field => { "log_level" => "%{[level]}" }
      }
    }
    
    # Add request info if available
    if [http_request] {
      mutate {
        add_field => { "http_method" => "%{[http_request][method]}" }
        add_field => { "http_path" => "%{[http_request][path]}" }
        add_field => { "http_status" => "%{[http_request][status]}" }
        add_field => { "response_time" => "%{[http_request][duration]}" }
      }
    }
  }
  
  # Redis logs
  if [container][labels][com_docker_compose_service] == "redis" {
    mutate {
      add_field => { "service" => "redis" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "moonx-farm-%{+YYYY.MM.dd}"
    template_name => "moonx-farm"
    template => {
      "index_patterns" => ["moonx-farm-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "service" => { "type" => "keyword" }
          "log_level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "http_method" => { "type" => "keyword" }
          "http_path" => { "type" => "keyword" }
          "http_status" => { "type" => "integer" }
          "response_time" => { "type" => "float" }
        }
      }
    }
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug
  }
} 