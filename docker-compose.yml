# ================================
# MoonXFarm DEX - Docker Compose
# ================================
# Local development and testing environment

version: '3.8'

services:
  # ================================
  # MoonXFarm Web Application
  # ================================
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: runner
    container_name: moonx-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      # Application URLs
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      # Backend Service URLs (uncomment and configure as needed)
      # - NEXT_PUBLIC_AUTH_API_URL=http://auth-service:3001/api/v1
      # - NEXT_PUBLIC_AGGREGATOR_API_URL=http://aggregator-service:3003/api/v1
      # - NEXT_PUBLIC_CORE_API_URL=http://core-service:3007/api/v1
      # - NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api
      # Authentication & Web3 (configure these)
      # - NEXT_PUBLIC_PRIVY_APP_ID=your_privy_app_id
      # - NEXT_PUBLIC_ZERODEV_PROJECT_ID=your_zerodev_project_id
      # Smart Contract Addresses (configure per deployment)
      # - NEXT_PUBLIC_DIAMOND_CONTRACT_BASE=0x...
      # - NEXT_PUBLIC_DIAMOND_CONTRACT_BSC=0x...
      # RPC URLs (configure for better performance)
      # - NEXT_PUBLIC_BASE_RPC=https://base-mainnet.g.alchemy.com/v2/YOUR-API-KEY
      # - NEXT_PUBLIC_BSC_RPC=https://bsc-dataseed1.binance.org
    volumes:
      # Mount logs for debugging (optional)
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - moonx-network

  # ================================
  # Redis (for development/testing)
  # ================================
  redis:
    image: redis:7-alpine
    container_name: moonx-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - moonx-network

  # ================================
  # PostgreSQL (for development/testing) 
  # ================================
  postgres:
    image: postgres:15-alpine
    container_name: moonx-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=moonx_dev
      - POSTGRES_USER=moonx
      - POSTGRES_PASSWORD=moonx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - moonx-network

# ================================
# Networks
# ================================
networks:
  moonx-network:
    driver: bridge
    name: moonx-network

# ================================
# Volumes
# ================================
volumes:
  redis_data:
    name: moonx_redis_data
  postgres_data:
    name: moonx_postgres_data 