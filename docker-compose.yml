version: '3.8'

services:
  # ===================
  # Infrastructure Services  
  # ===================
  postgres:
    image: postgres:15
    container_name: moonx-postgres
    environment:
      POSTGRES_DB: moonx_farm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - moonx_network

  redis:
    image: redis:7-alpine
    container_name: moonx-redis
    ports:
      - "6379:6379"
    networks:
      - moonx_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: moonx-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - moonx_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: moonx-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - moonx_network

  # ===================
  # Core Services
  # ===================
  api-gateway:
    build: ./services/api-gateway
    container_name: moonx-api-gateway
    ports:
      - "3000:3000"
    env_file:
      - ./services/api-gateway/.env
    depends_on:
      - postgres
      - redis
      - notify-service
      - auth-service
    networks:
      - moonx_network

  notify-service:
    build: ./services/notify-service
    container_name: moonx-notify-service
    ports:
      - "3001:3001"
    env_file:
      - ./services/notify-service/.env
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - moonx_network

  auth-service:
    build: ./services/auth-service
    container_name: moonx-auth-service
    ports:
      - "3002:3002"
    env_file:
      - ./services/auth-service/.env
    depends_on:
      - postgres
      - redis
    networks:
      - moonx_network

  wallet-registry:
    build: ./services/wallet-registry
    container_name: moonx-wallet-registry
    ports:
      - "3003:3003"
    env_file:
      - ./services/wallet-registry/.env
    depends_on:
      - postgres
      - redis
    networks:
      - moonx_network

  quote-service:
    build: ./services/quote-service
    container_name: moonx-quote-service
    ports:
      - "3004:3004"
    env_file:
      - ./services/quote-service/.env
    depends_on:
      - redis
    networks:
      - moonx_network

  swap-orchestrator:
    build: ./services/swap-orchestrator
    container_name: moonx-swap-orchestrator
    ports:
      - "3005:3005"
    env_file:
      - ./services/swap-orchestrator/.env
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - moonx_network

  position-indexer:
    build: ./services/position-indexer
    container_name: moonx-position-indexer
    ports:
      - "3006:3006"
    env_file:
      - ./services/position-indexer/.env
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - moonx_network

  # ===================
  # Worker Services
  # ===================
  price-crawler:
    build: ./workers/price-crawler
    container_name: moonx-price-crawler
    ports:
      - "4001:4001"
    env_file:
      - ./workers/price-crawler/.env
    depends_on:
      - redis
      - kafka
    networks:
      - moonx_network

  order-executor:
    build: ./workers/order-executor
    container_name: moonx-order-executor
    ports:
      - "4002:4002"
    env_file:
      - ./workers/order-executor/.env
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - moonx_network

  # ===================
  # Frontend
  # ===================
  web-app:
    build: ./apps/web
    container_name: moonx-web-app
    ports:
      - "3100:3000"
    env_file:
      - ./apps/web/.env.local
    depends_on:
      - api-gateway
    networks:
      - moonx_network

  # ===================
  # Monitoring (Optional for local dev)
  # ===================
  prometheus:
    image: prom/prometheus:latest
    container_name: moonx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - moonx_network

  grafana:
    image: grafana/grafana:latest
    container_name: moonx-grafana
    ports:
      - "3200:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - moonx_network

networks:
  moonx_network:
    driver: bridge

volumes:
  postgres_data:
  grafana_data: 